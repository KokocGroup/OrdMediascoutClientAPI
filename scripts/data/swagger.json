{
  "openapi": "3.0.1",
  "info": {
    "title": "Документация API Mediascout",
    "description": "</b>",
    "version": "1.0"
  },
  "paths": {
    "/webapi/clients/createclient": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Создает заказчика (TASK #2788310)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/clients/getclients": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Возвращает список заказчиков (TASK #2788310)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetClientRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetClientRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetClientRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/contracts/createfinalcontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Создает конечный договор (TASK #2788308)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinalContractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinalContractRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinalContractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinalContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/contracts/createinitialcontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Создает изначальный договор (TASK #2775607)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialContractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialContractRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialContractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/contracts/createoutercontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Создает расходный договор (TASK #2843048)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOuterContractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOuterContractRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOuterContractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOuterContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/contracts/deletecontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Удаляет договор",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteContractWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteContractWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteContractWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteContractWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/contracts/editfinalcontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Редактирует конечный договор",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditFinalContractWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditFinalContractWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditFinalContractWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditFinalContractWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/contracts/editinitialcontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Редактирует изначальный договор",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInitialContractWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInitialContractWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInitialContractWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInitialContractWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/contracts/editoutercontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Редактирует расходный договор",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditOuterContractWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOuterContractWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOuterContractWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditOuterContractWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/contracts/getfinalcontracts": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Возвращает список конечных договоров (TASK #2788308)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetFinalContractsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetFinalContractsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetFinalContractsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetFinalContractsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinalContractResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinalContractResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinalContractResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/contracts/getinitialcontracts": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Возвращает список изначальных договоров (TASK #2775607)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInitialContractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInitialContractRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInitialContractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInitialContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InitialContractResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InitialContractResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InitialContractResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/contracts/getoutercontracts": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Возвращает список расходных договоров (TASK #2843048)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetOuterContractsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetOuterContractsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetOuterContractsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetOuterContractsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OuterContractResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OuterContractResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OuterContractResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/creatives/createcreative": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Создает креатив (TASK #2775609)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreativeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreativeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreativeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreativeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/creatives/deletecreative": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Удаляет креатив",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/creatives/editcreative": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Редактирует креатив",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditCreativeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCreativeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCreativeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditCreativeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/creatives/editcreativegroup": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Редактирует группу креативов",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeGroupResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeGroupResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeGroupResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeGroupResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeGroupResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeGroupResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/creatives/getcreativegroups": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Возвращает список групп креативов",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativeGroupsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativeGroupsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativeGroupsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativeGroupsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeGroupResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeGroupResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeGroupResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/creatives/getcreatives": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Возвращает список креативов (TASK #2775609)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativesWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativesWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativesWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativesWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/creatives/restorecreative": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Восстанавливает креатив",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/creatives/simpleeditcreative": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Единый метод для редактирования как креатива, так и группы",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleEditCreativeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleEditCreativeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleEditCreativeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleEditCreativeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/fias/getfiasobjects": {
      "post": {
        "tags": [
          "Fias"
        ],
        "summary": "(МЕТОД УСТАРЕЛ) Получение списка объектов из справочника",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FiasResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FiasResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FiasResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/invoices/clearinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Очищает акт",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClearInvoiceDataWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearInvoiceDataWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearInvoiceDataWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClearInvoiceDataWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/invoices/confirminvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Подтверждает акт (финализирует загрузку акта со стороны агентства) (TASK #2825550)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/invoices/createinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Создает акт (TASK #2775610)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/invoices/deleteinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Удаляет неверный акт (TASK #2825550)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/invoices/editinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Редактирует акт",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceDataWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceDataWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceDataWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceDataWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/invoices/getinvoices": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Возвращает список актов (TASK #2775610)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicesWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicesWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicesWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicesWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/invoices/getinvoicesummary": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Выдает сводку по акту (TASK #2825550)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSummaryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSummaryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/invoices/overwriteinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Перезаписывает акт",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceStatisticsWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceStatisticsWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceStatisticsWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceStatisticsWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/invoices/partialclearinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Частично очищает акт",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PartialClearInvoiceWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialClearInvoiceWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialClearInvoiceWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PartialClearInvoiceWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/invoices/supplementinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Дополняет акт (TASK #2825550)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementInvoiceWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementInvoiceWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementInvoiceWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementInvoiceWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "summary": "Метод для проверки подключения к WebAPI, без авторизации. Возвращает список заголовков запроса",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/webapi/pingauth": {
      "get": {
        "tags": [
          "Ping"
        ],
        "summary": "Метод для проверки подключения к WebAPI, включая авторизацию. Возвращает список заголовков запроса",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/webapi/platforms/createplatform": {
      "post": {
        "tags": [
          "Platform"
        ],
        "summary": "Создает площадку (TASK #2826490)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/platforms/editplatform": {
      "post": {
        "tags": [
          "Platform"
        ],
        "summary": "Редактирует площадку",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditPlatformWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPlatformWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPlatformWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditPlatformWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/statistics/createstatistics": {
      "post": {
        "tags": [
          "Statistics"
        ],
        "summary": "Загружает статистику показов без акта",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoicelessStatisticsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoicelessStatisticsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoicelessStatisticsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoicelessStatisticsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/statistics/getstatistics": {
      "post": {
        "tags": [
          "Statistics"
        ],
        "summary": "Возвращает периоды статистики показов без акта",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicelessPeriodsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicelessPeriodsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicelessPeriodsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicelessPeriodsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoicelessStatisticsResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoicelessStatisticsResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoicelessStatisticsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/clients/createclient": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Создает заказчика (TASK #2788310)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/clients/getclients": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Возвращает список заказчиков (TASK #2788310)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetClientRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetClientRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetClientRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/contracts/createfinalcontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Создает конечный договор (TASK #2788308)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinalContractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinalContractRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinalContractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinalContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/contracts/createinitialcontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Создает изначальный договор (TASK #2775607)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialContractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialContractRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialContractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/contracts/createoutercontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Создает расходный договор (TASK #2843048)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOuterContractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOuterContractRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOuterContractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOuterContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/contracts/deletecontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Удаляет договор",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteContractWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteContractWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteContractWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteContractWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/contracts/editfinalcontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Редактирует конечный договор",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditFinalContractWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditFinalContractWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditFinalContractWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditFinalContractWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/contracts/editinitialcontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Редактирует изначальный договор",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInitialContractWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInitialContractWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInitialContractWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInitialContractWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/contracts/editoutercontract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Редактирует расходный договор",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditOuterContractWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOuterContractWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOuterContractWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditOuterContractWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuterContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/contracts/getfinalcontracts": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Возвращает список конечных договоров (TASK #2788308)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetFinalContractsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetFinalContractsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetFinalContractsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetFinalContractsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinalContractResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinalContractResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinalContractResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/contracts/getinitialcontracts": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Возвращает список изначальных договоров (TASK #2775607)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInitialContractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInitialContractRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInitialContractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInitialContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InitialContractResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InitialContractResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InitialContractResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/contracts/getoutercontracts": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Возвращает список расходных договоров (TASK #2843048)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetOuterContractsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetOuterContractsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetOuterContractsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetOuterContractsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OuterContractResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OuterContractResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OuterContractResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/creatives/createcreative": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Создает креатив (TASK #2775609)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreativeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreativeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreativeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreativeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCreativeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/creatives/deletecreative": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Удаляет креатив",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/creatives/editcreative": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Редактирует креатив",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditCreativeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCreativeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCreativeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditCreativeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/creatives/editcreativegroup": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Редактирует группу креативов",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeGroupResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeGroupResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeGroupResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeGroupResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeGroupResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeGroupResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/creatives/getcreativegroups": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Возвращает список групп креативов",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativeGroupsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativeGroupsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativeGroupsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativeGroupsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeGroupResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeGroupResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeGroupResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/creatives/getcreatives": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Возвращает список креативов (TASK #2775609)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativesWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativesWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativesWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreativesWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreativeResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/creatives/restorecreative": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Восстанавливает креатив",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestoreCreativeWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/creatives/simpleeditcreative": {
      "post": {
        "tags": [
          "Creative"
        ],
        "summary": "Единый метод для редактирования как креатива, так и группы",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleEditCreativeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleEditCreativeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleEditCreativeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleEditCreativeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/fias/getfiasobjects": {
      "post": {
        "tags": [
          "Fias"
        ],
        "summary": "(МЕТОД УСТАРЕЛ) Получение списка объектов из справочника",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FiasResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FiasResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FiasResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/invoices/clearinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Очищает акт",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClearInvoiceDataWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearInvoiceDataWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearInvoiceDataWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClearInvoiceDataWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/invoices/confirminvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Подтверждает акт (финализирует загрузку акта со стороны агентства) (TASK #2825550)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/invoices/createinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Создает акт (TASK #2775610)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/invoices/deleteinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Удаляет неверный акт (TASK #2825550)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/invoices/editinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Редактирует акт",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceDataWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceDataWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceDataWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceDataWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/invoices/getinvoices": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Возвращает список актов (TASK #2775610)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicesWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicesWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicesWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicesWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/invoices/getinvoicesummary": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Выдает сводку по акту (TASK #2825550)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityIdResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSummaryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSummaryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/invoices/overwriteinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Перезаписывает акт",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceStatisticsWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceStatisticsWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceStatisticsWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditInvoiceStatisticsWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/invoices/partialclearinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Частично очищает акт",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PartialClearInvoiceWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialClearInvoiceWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialClearInvoiceWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PartialClearInvoiceWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/invoices/supplementinvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Дополняет акт (TASK #2825550)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementInvoiceWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementInvoiceWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementInvoiceWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementInvoiceWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/platforms/createplatform": {
      "post": {
        "tags": [
          "Platform"
        ],
        "summary": "Создает площадку (TASK #2826490)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/platforms/editplatform": {
      "post": {
        "tags": [
          "Platform"
        ],
        "summary": "Редактирует площадку",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditPlatformWebApiDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPlatformWebApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPlatformWebApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditPlatformWebApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/statistics/createstatistics": {
      "post": {
        "tags": [
          "Statistics"
        ],
        "summary": "Загружает статистику показов без акта",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoicelessStatisticsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoicelessStatisticsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoicelessStatisticsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoicelessStatisticsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/webapi/v1/statistics/getstatistics": {
      "post": {
        "tags": [
          "Statistics"
        ],
        "summary": "Возвращает периоды статистики показов без акта",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicelessPeriodsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicelessPeriodsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicelessPeriodsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvoicelessPeriodsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoicelessStatisticsResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoicelessStatisticsResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoicelessStatisticsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadRequestResponse": {
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string",
            "description": "Тип ошибки.",
            "example": "Unauthorized"
          },
          "traceId": {
            "type": "string",
            "description": "Идентификатор запроса. Значение атрибута TraceId необходимо использовать при взаимодействии с техподдержкой ОРД Медиаскаут. Данное поле содержит в себе идентификатор логов текущего процесса.",
            "nullable": true,
            "example": "00-982607166a542147b435be3a847ddd71-fc75498eb9f09d48-00"
          },
          "errorItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationFailure"
            },
            "description": "Список ошибок.",
            "example": [
              "Unauthorized"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Описание возникшей ошибки."
      },
      "ClearInvoiceDataWebApiDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор акта"
          }
        },
        "additionalProperties": false,
        "description": "DTO для редактирования статистики акта через WebAPI"
      },
      "ClientResponse": {
        "type": "object",
        "properties": {
          "createMode": {
            "enum": [
              "DirectClient",
              "InitialContractClient"
            ],
            "type": "string",
            "description": "Тип отношения заказчика к агентству",
            "nullable": true
          },
          "legalForm": {
            "enum": [
              "JuridicalPerson",
              "IndividualEntrepreneur",
              "PhysicalPerson",
              "InternationalJuridicalPerson",
              "InternationalPhysicalPerson"
            ],
            "type": "string",
            "description": "Юридическая форма заказчика<p>Members:</p><ul><li><i>JuridicalPerson</i> - Юрлицо РФ</li><li><i>IndividualEntrepreneur</i> - Индивидуальный предприниматель РФ</li><li><i>PhysicalPerson</i> - Физлицо РФ</li><li><i>InternationalJuridicalPerson</i> - Иностранное юрлицо</li><li><i>InternationalPhysicalPerson</i> - Иностранное физлицо</li></ul>"
          },
          "inn": {
            "type": "string",
            "description": "Для РФ-контрагентов - ИНН. Для иностранных физ.и юр.лиц - номер налогоплательщика либо его аналог в стране регистрации",
            "example": "1234567890"
          },
          "name": {
            "type": "string",
            "description": "Наименование контрагента",
            "example": "Наименование контрагента"
          },
          "mobilePhone": {
            "type": "string",
            "description": "Номер мобильного телефона",
            "nullable": true,
            "example": "79999999999"
          },
          "epayNumber": {
            "type": "string",
            "description": "Номер электронного средства платежа",
            "nullable": true
          },
          "regNumber": {
            "type": "string",
            "description": "Регистрационный номер либо его аналог",
            "nullable": true
          },
          "oksmNumber": {
            "type": "string",
            "description": "Код страны регистрации юр. лица в соответствии с ОКСМ",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Id контрагента в ОРД",
            "example": "CLfFpx6Ee4qkawO6JwEDJqFQ"
          },
          "status": {
            "enum": [
              "Created",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError",
              "Blocked"
            ],
            "type": "string",
            "description": "Статус контрагента в ОРД<p>Members:</p><ul><li><i>Created</i> - Создан в БД (наша валидация пройдена). Пока не используется, сущность сразу переходит в статус [Ожидает регистрации].</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>Active</i> - Активный (оба этапа ЕРИР-регистрации завершены успешно)</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li><li><i>Blocked</i> - Заблокирован (применимо только к TopLevelAgency)</li></ul>"
          },
          "erirValidationError": {
            "$ref": "#/components/schemas/ErirValidationError"
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос заказчика"
      },
      "CreateClientRequest": {
        "type": "object",
        "properties": {
          "createMode": {
            "enum": [
              "DirectClient",
              "InitialContractClient"
            ],
            "type": "string",
            "description": "Тип отношения заказчика к агентству",
            "nullable": true
          },
          "legalForm": {
            "enum": [
              "JuridicalPerson",
              "IndividualEntrepreneur",
              "PhysicalPerson",
              "InternationalJuridicalPerson",
              "InternationalPhysicalPerson"
            ],
            "type": "string",
            "description": "Юридическая форма заказчика<p>Members:</p><ul><li><i>JuridicalPerson</i> - Юрлицо РФ</li><li><i>IndividualEntrepreneur</i> - Индивидуальный предприниматель РФ</li><li><i>PhysicalPerson</i> - Физлицо РФ</li><li><i>InternationalJuridicalPerson</i> - Иностранное юрлицо</li><li><i>InternationalPhysicalPerson</i> - Иностранное физлицо</li></ul>"
          },
          "inn": {
            "type": "string",
            "description": "Для РФ-контрагентов - ИНН. Для иностранных физ.и юр.лиц - номер налогоплательщика либо его аналог в стране регистрации",
            "example": "1234567890"
          },
          "name": {
            "type": "string",
            "description": "Наименование контрагента",
            "example": "Наименование контрагента"
          },
          "mobilePhone": {
            "type": "string",
            "description": "Номер мобильного телефона",
            "nullable": true,
            "example": "79999999999"
          },
          "epayNumber": {
            "type": "string",
            "description": "Номер электронного средства платежа",
            "nullable": true
          },
          "regNumber": {
            "type": "string",
            "description": "Регистрационный номер либо его аналог",
            "nullable": true
          },
          "oksmNumber": {
            "type": "string",
            "description": "Код страны регистрации юр. лица в соответствии с ОКСМ",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для создания заказчика"
      },
      "CreateCreativeRequest": {
        "type": "object",
        "properties": {
          "nativeCustomerId": {
            "type": "string",
            "description": "Id креатива в системе клиента\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "creativeGroupId": {
            "type": "string",
            "description": "Id группы (брони) креативов\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true,
            "example": "CG3oAF-jsLEkGx83pCs9-FPQ"
          },
          "creativeGroupName": {
            "type": "string",
            "description": "Имя группы (брони) креативов.\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Обязательно при создании новой группы (брони) креативов</p>",
            "nullable": true,
            "example": "ТестоваяГруппа"
          },
          "creativeGroupStartDate": {
            "type": "string",
            "description": "Дата начала рекламной компании\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "format": "date",
            "nullable": true,
            "example": "2023-01-01"
          },
          "creativeGroupEndDate": {
            "type": "string",
            "description": "Дата окончания рекламной компании\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "format": "date",
            "nullable": true,
            "example": "2023-30-01"
          },
          "finalContractId": {
            "type": "string",
            "description": "Id доходного договора в ОРД\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>",
            "nullable": true,
            "example": "CT6WFbMXPGcE2lx5Ffm-npAg"
          },
          "initialContractId": {
            "type": "string",
            "description": "Id или Cid изначального договора. Если креатив создается на доходный договор, то нужно указать InitialContractId = FinalContractId\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>",
            "nullable": true,
            "example": "AAADgMygKIOkyGuPfl83W1ow"
          },
          "isSelfPromotion": {
            "type": "boolean",
            "description": "Является креативом саморекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "type": {
            "enum": [
              "CPM",
              "CPC",
              "CPA",
              "Other"
            ],
            "type": "string",
            "description": "Тип рекламной кампании\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>CPM</i> - Cost Per Millennium, оплата за тысячу показов</li><li><i>CPC</i> - Cost Per Click, оплата за клик баннера</li><li><i>CPA</i> - Cost Per Action, оплата за совершенное целевое действие</li><li><i>Other</i> - Иное</li></ul>"
          },
          "form": {
            "enum": [
              "Banner",
              "Text",
              "TextGraphic",
              "Video",
              "Audio",
              "AudioBroadcast",
              "VideoBroadcast",
              "Other",
              "TextVideoBlock",
              "TextAudioBlock",
              "TextAudioVideoBlock",
              "TextGraphicVideoBlock",
              "TextGraphicAudioBlock",
              "TextGraphicAudioVideoBlock",
              "BannerHtml5"
            ],
            "type": "string",
            "description": "Форма распространения рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>Banner</i> - Баннер</li><li><i>Text</i> - Текстовый блок</li><li><i>TextGraphic</i> - Текстово-графический блок</li><li><i>Video</i> - Видеоролик</li><li><i>Audio</i> - Аудиозапись</li><li><i>AudioBroadcast</i> - Аудиотрансляции в прямом эфире</li><li><i>VideoBroadcast</i> - Видеотрансляции в прямом эфире</li><li><i>Other</i> - Иное - не поддерживается начиная с ЕРИР v.5</li><li><i>TextVideoBlock</i> - Текстовый блок с видео</li><li><i>TextAudioBlock</i> - Текстовый блок с аудио</li><li><i>TextAudioVideoBlock</i> - Текстовый блок с аудио и видео</li><li><i>TextGraphicVideoBlock</i> - Текстово-графический блок с видео</li><li><i>TextGraphicAudioBlock</i> - Текстово-графический блок с аудио</li><li><i>TextGraphicAudioVideoBlock</i> - Текстово-графический блок с аудио и видео</li><li><i>BannerHtml5</i> - </li></ul>"
          },
          "advertiserUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Целевые ссылки (массив)\n\r\nПроверка URL:\r\n<ul><li>Проверить протокол http, https, ftp, sftp</li><li>Проверить хост: в нем не должно содержаться punycode или urlencode</li></ul><p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true,
            "example": [
              "http://test.ru"
            ]
          },
          "description": {
            "type": "string",
            "description": "Общее описание объекта рекламирования\r\n<ul><li>Минимальная длина: 1</li><li>Максимальная длина: 1000</li><li>Длина строки от 1 до 1000, может содержать цифры и буквы, а также все спец символы</li><li>В начале и в конце не должно быть пробела и переноса на другую строку</li></ul><p style=\"color: blue\">Поле обязательно для заполнения</p>",
            "example": "Описание креатива 4H67RLFG"
          },
          "targetAudienceParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetAudienceParam"
            },
            "description": "Параметры целевой аудитории рекламы\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "isNative": {
            "type": "boolean",
            "description": "Признак нативной рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "isSocial": {
            "type": "boolean",
            "description": "Признак социальной рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "mediaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeMediaDataItem"
            },
            "description": "Медиаданные креатива (массив)\n\r\nДолжен быть добавлен хотя бы один элемент при значениях поля form:\r\n<ul><li>TextGraphic</li><li>TextVideoBlock</li><li>TextAudioBlock</li><li>TextAudioVideoBlock</li><li>TextGraphicVideoBlock</li><li>TextGraphicAudioBlock</li><li>TextGraphicAudioVideoBlock</li><li>Banner</li><li>BannerHtml5</li><li>Video</li><li>Audio</li><li>AudioBroadcast</li><li>VideoBroadcast</li></ul><p style=\"color: blue\">Поле условно-обязательно для заполнения</p>",
            "nullable": true
          },
          "textData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTextDataItem"
            },
            "description": "Текстовые медиаданные креатива (массив)\n\r\nДолжен быть добавлен хотя бы один элемент при значениях поля form:\r\n<ul><li>Text</li><li>TextGraphic</li><li>TextVideoBlock</li><li>TextAudioBlock</li><li>TextAudioVideoBlock</li><li>TextGraphicVideoBlock</li><li>TextGraphicAudioBlock</li><li>TextGraphicAudioVideoBlock</li></ul><p style=\"color: blue\">Поле условно-обязательно для заполнения</p>",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для создания кретива"
      },
      "CreateFinalContractRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата заключения договора",
            "format": "date",
            "example": "2023-04-01"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по договору в руб.",
            "format": "double",
            "nullable": true,
            "example": 100
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "Включен ли НДС в Amount",
            "example": true
          },
          "isAgentActingForPublisher": {
            "type": "boolean",
            "description": "Направление денежных средств в сторону заказчика",
            "nullable": true,
            "example": true
          },
          "type": {
            "enum": [
              "ServiceAgreement",
              "MediationContract",
              "AdditionalAgreement",
              "SelfPromotionContract",
              "VirtualFinalContract",
              "EcidContract"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы договоров\"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>"
          },
          "subjectType": {
            "enum": [
              "Distribution",
              "OrgDistribution",
              "Representation",
              "Mediation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Сведения о предмете договора\"",
            "nullable": true
          },
          "actionType": {
            "enum": [
              "Contracting",
              "Distribution",
              "CommercialRepresentation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы взаимодействия сторон посреднического договора\"",
            "nullable": true
          },
          "parentMainContractId": {
            "type": "string",
            "description": "Id основного договора для доп.соглашения",
            "nullable": true,
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "clientId": {
            "type": "string",
            "description": "Id контрагента-заказчика по доходному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "partnerId": {
            "type": "string",
            "description": "Id партнера",
            "nullable": true,
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для создания доходного договора"
      },
      "CreateInitialContractRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата заключения договора",
            "format": "date",
            "example": "2023-04-01"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по договору в руб.",
            "format": "double",
            "nullable": true,
            "example": 100
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "Включен ли НДС в Amount",
            "example": true
          },
          "isAgentActingForPublisher": {
            "type": "boolean",
            "description": "Направление денежных средств в сторону заказчика",
            "nullable": true,
            "example": true
          },
          "type": {
            "enum": [
              "ServiceAgreement",
              "MediationContract",
              "AdditionalAgreement",
              "SelfPromotionContract",
              "VirtualFinalContract",
              "EcidContract"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы договоров\"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>"
          },
          "subjectType": {
            "enum": [
              "Distribution",
              "OrgDistribution",
              "Representation",
              "Mediation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Сведения о предмете договора\"",
            "nullable": true
          },
          "actionType": {
            "enum": [
              "Contracting",
              "Distribution",
              "CommercialRepresentation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы взаимодействия сторон посреднического договора\"",
            "nullable": true
          },
          "parentMainContractId": {
            "type": "string",
            "description": "Id основного договора для доп.соглашения",
            "nullable": true,
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "contractorId": {
            "type": "string",
            "description": "Id контрагента-исполнителя по изначальному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "clientId": {
            "type": "string",
            "description": "Id контрагента-заказчика по изначальному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "finalContractId": {
            "type": "string",
            "description": "Id или Cid доходного договора",
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для создания изначального договора"
      },
      "CreateInvoiceRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер акта. Допускается null, в таком случае считаем, что акт без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата акта",
            "format": "date",
            "example": "2022-12-31"
          },
          "contractorRole": {
            "enum": [
              "Rr",
              "Ors",
              "Rd",
              "Ra"
            ],
            "type": "string",
            "description": "Роль исполнителя в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>",
            "example": "Ra"
          },
          "clientRole": {
            "enum": [
              "Rr",
              "Ors",
              "Rd",
              "Ra"
            ],
            "type": "string",
            "description": "Роль заказчика в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>",
            "example": "Rd"
          },
          "amount": {
            "type": "number",
            "description": "Общая стоимость по акту в руб.",
            "format": "double",
            "example": 100
          },
          "startDate": {
            "type": "string",
            "description": "Дата начала оказания услуг по акту",
            "format": "date",
            "example": "2022-12-01"
          },
          "endDate": {
            "type": "string",
            "description": "Дата окончания оказания услуг по акту (включительно)",
            "format": "date",
            "example": "2022-12-31"
          },
          "finalContractId": {
            "type": "string",
            "description": "Id доходного договора в ОРД",
            "example": "CT3at_SU7y3ECdCb-AfHV3sA"
          },
          "initialContractsData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceInitialContractItem"
            },
            "description": "Данные по изначальным договорам (массив)",
            "nullable": true
          },
          "statisticsByPlatforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceStatisticsByPlatformsItem"
            },
            "description": "Статистика по площадкам (массив)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для создания акта"
      },
      "CreateInvoicelessStatisticsRequest": {
        "type": "object",
        "properties": {
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicelessStatisticsByPlatforms"
            },
            "description": "Статистика по площадкам (массив)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для создания периодов статистики в отрыве от акта"
      },
      "CreateOuterContractRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата заключения договора",
            "format": "date",
            "example": "2023-04-01"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по договору в руб.",
            "format": "double",
            "nullable": true,
            "example": 100
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "Включен ли НДС в Amount",
            "example": true
          },
          "isAgentActingForPublisher": {
            "type": "boolean",
            "description": "Направление денежных средств в сторону заказчика",
            "nullable": true,
            "example": true
          },
          "type": {
            "enum": [
              "ServiceAgreement",
              "MediationContract",
              "AdditionalAgreement",
              "SelfPromotionContract",
              "VirtualFinalContract",
              "EcidContract"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы договоров\"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>"
          },
          "subjectType": {
            "enum": [
              "Distribution",
              "OrgDistribution",
              "Representation",
              "Mediation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Сведения о предмете договора\"",
            "nullable": true
          },
          "actionType": {
            "enum": [
              "Contracting",
              "Distribution",
              "CommercialRepresentation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы взаимодействия сторон посреднического договора\"",
            "nullable": true
          },
          "parentMainContractId": {
            "type": "string",
            "description": "Id основного договора для доп.соглашения",
            "nullable": true,
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "contractorId": {
            "type": "string",
            "description": "Id контрагента-исполнителя по изначальному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "partnerId": {
            "type": "string",
            "description": "Id партнера",
            "nullable": true,
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "isRegReport": {
            "type": "boolean",
            "description": "Признак того, что исполнитель по договору (Агентство, к которому относится договор) должен регистрировать креативы и предоставлять разаллокацию по ним в актах"
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для создания расходного договора"
      },
      "CreatePlatformRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование площадки",
            "example": "Тестовая площадка"
          },
          "type": {
            "enum": [
              "Site",
              "Application",
              "InformationSystem"
            ],
            "type": "string",
            "description": "Тип площадки<p>Members:</p><ul><li><i>Site</i> - Сайт</li><li><i>Application</i> - Приложение</li><li><i>InformationSystem</i> - Информационная система, не поддерживается начиная с ЕРИР v.5</li></ul>"
          },
          "url": {
            "type": "string",
            "description": "Url площадки",
            "nullable": true,
            "example": "https://example.com"
          },
          "isOwner": {
            "type": "boolean",
            "description": "Признак принадлежности агентству"
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для создания площадки"
      },
      "CreatedCreativeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id креатива"
          },
          "nativeCustomerId": {
            "type": "string",
            "description": "Id креатива в системе клиента",
            "nullable": true
          },
          "erid": {
            "type": "string",
            "description": "Erid креатива"
          },
          "creativeGroupId": {
            "type": "string",
            "description": "Id брони (группы) креативов"
          },
          "creativeGroupName": {
            "type": "string",
            "description": "Наименование брони (группы) креативов"
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос креатива"
      },
      "CreativeGroupResponse": {
        "type": "object",
        "properties": {
          "creativeGroupId": {
            "type": "string",
            "description": "Id группы креативов\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "finalContractId": {
            "type": "string",
            "description": "Id конечного договора, к которому привязана группа креативов\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>",
            "nullable": true
          },
          "initialContractId": {
            "type": "string",
            "description": "Id или Cid изначального договора, к которому относится группа креативов\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>",
            "nullable": true
          },
          "isSelfPromotion": {
            "type": "boolean",
            "description": "Креативы относятся к саморекламе\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "creativeGroupName": {
            "type": "string",
            "description": "Наименование\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "startDate": {
            "type": "string",
            "description": "Дата начала рекламной компании\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Дата окончания рекламной компании\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>",
            "format": "date",
            "nullable": true
          },
          "type": {
            "enum": [
              "CPM",
              "CPC",
              "CPA",
              "Other"
            ],
            "type": "string",
            "description": "Тип рекламной кампании\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>CPM</i> - Cost Per Millennium, оплата за тысячу показов</li><li><i>CPC</i> - Cost Per Click, оплата за клик баннера</li><li><i>CPA</i> - Cost Per Action, оплата за совершенное целевое действие</li><li><i>Other</i> - Иное</li></ul>"
          },
          "form": {
            "enum": [
              "Banner",
              "Text",
              "TextGraphic",
              "Video",
              "Audio",
              "AudioBroadcast",
              "VideoBroadcast",
              "Other",
              "TextVideoBlock",
              "TextAudioBlock",
              "TextAudioVideoBlock",
              "TextGraphicVideoBlock",
              "TextGraphicAudioBlock",
              "TextGraphicAudioVideoBlock",
              "BannerHtml5"
            ],
            "type": "string",
            "description": "Форма распространения рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>Banner</i> - Баннер</li><li><i>Text</i> - Текстовый блок</li><li><i>TextGraphic</i> - Текстово-графический блок</li><li><i>Video</i> - Видеоролик</li><li><i>Audio</i> - Аудиозапись</li><li><i>AudioBroadcast</i> - Аудиотрансляции в прямом эфире</li><li><i>VideoBroadcast</i> - Видеотрансляции в прямом эфире</li><li><i>Other</i> - Иное - не поддерживается начиная с ЕРИР v.5</li><li><i>TextVideoBlock</i> - Текстовый блок с видео</li><li><i>TextAudioBlock</i> - Текстовый блок с аудио</li><li><i>TextAudioVideoBlock</i> - Текстовый блок с аудио и видео</li><li><i>TextGraphicVideoBlock</i> - Текстово-графический блок с видео</li><li><i>TextGraphicAudioBlock</i> - Текстово-графический блок с аудио</li><li><i>TextGraphicAudioVideoBlock</i> - Текстово-графический блок с аудио и видео</li><li><i>BannerHtml5</i> - </li></ul>"
          },
          "isSocial": {
            "type": "boolean",
            "description": "Признак социальной рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "isNative": {
            "type": "boolean",
            "description": "Признак нативной рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "targetAudienceParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetAudienceParam"
            },
            "description": "Параметры целевой аудитории\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Общее описание объекта рекламирования\r\n<ul><li>Минимальная длина: 1</li><li>Максимальная длина: 1000</li><li>Длина строки от 1 до 1000, может содержать цифры и буквы, а также все спец символы</li><li>В начале и в конце не должно быть пробела и переноса на другую строку</li></ul><p style=\"color: blue\">Поле обязательно для заполнения</p>"
          }
        },
        "additionalProperties": false,
        "description": "Информация о группе креативов"
      },
      "CreativeMediaDataItem": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Имя файла\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>",
            "example": "file.txt"
          },
          "fileType": {
            "enum": [
              "Image",
              "Video",
              "Audio",
              "Zip",
              "Other"
            ],
            "type": "string",
            "description": "Тип файла медиаданных креатива\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>Image</i> - Изображение</li><li><i>Video</i> - Видео</li><li><i>Audio</i> - Аудио</li><li><i>Zip</i> - Архив</li><li><i>Other</i> - Иное</li></ul>",
            "example": "image"
          },
          "fileContentBase64": {
            "type": "string",
            "description": "Содержимое файла в кодировке Base64\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Обязательно, если не заполнено поле `srcUrl`</p>",
            "nullable": true
          },
          "srcUrl": {
            "type": "string",
            "description": "URL, откуда можно скачать файл. URL должен быть доступен без авторизации\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Обязательно, если не заполнено поле `fileContentBase64`</p>",
            "nullable": true,
            "example": "https://example.com"
          },
          "description": {
            "type": "string",
            "description": "Описание изображения креатива\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Обязательно для `fileType = image`</p>",
            "nullable": true,
            "example": "Описание"
          },
          "isArchive": {
            "type": "boolean",
            "description": "Признак того, что это архив\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>"
          }
        },
        "additionalProperties": false,
        "description": "Элемент медиаданных креатива"
      },
      "CreativeResponse": {
        "type": "object",
        "properties": {
          "nativeCustomerId": {
            "type": "string",
            "description": "Id креатива в системе клиента\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "creativeGroupId": {
            "type": "string",
            "description": "Id группы (брони) креативов\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true,
            "example": "CG3oAF-jsLEkGx83pCs9-FPQ"
          },
          "creativeGroupName": {
            "type": "string",
            "description": "Имя группы (брони) креативов.\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Обязательно при создании новой группы (брони) креативов</p>",
            "nullable": true,
            "example": "ТестоваяГруппа"
          },
          "creativeGroupStartDate": {
            "type": "string",
            "description": "Дата начала рекламной компании\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "format": "date",
            "nullable": true,
            "example": "2023-01-01"
          },
          "creativeGroupEndDate": {
            "type": "string",
            "description": "Дата окончания рекламной компании\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "format": "date",
            "nullable": true,
            "example": "2023-30-01"
          },
          "finalContractId": {
            "type": "string",
            "description": "Id доходного договора в ОРД\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>",
            "nullable": true,
            "example": "CT6WFbMXPGcE2lx5Ffm-npAg"
          },
          "initialContractId": {
            "type": "string",
            "description": "Id или Cid изначального договора. Если креатив создается на доходный договор, то нужно указать InitialContractId = FinalContractId\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>",
            "nullable": true,
            "example": "AAADgMygKIOkyGuPfl83W1ow"
          },
          "isSelfPromotion": {
            "type": "boolean",
            "description": "Является креативом саморекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "type": {
            "enum": [
              "CPM",
              "CPC",
              "CPA",
              "Other"
            ],
            "type": "string",
            "description": "Тип рекламной кампании\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>CPM</i> - Cost Per Millennium, оплата за тысячу показов</li><li><i>CPC</i> - Cost Per Click, оплата за клик баннера</li><li><i>CPA</i> - Cost Per Action, оплата за совершенное целевое действие</li><li><i>Other</i> - Иное</li></ul>"
          },
          "form": {
            "enum": [
              "Banner",
              "Text",
              "TextGraphic",
              "Video",
              "Audio",
              "AudioBroadcast",
              "VideoBroadcast",
              "Other",
              "TextVideoBlock",
              "TextAudioBlock",
              "TextAudioVideoBlock",
              "TextGraphicVideoBlock",
              "TextGraphicAudioBlock",
              "TextGraphicAudioVideoBlock",
              "BannerHtml5"
            ],
            "type": "string",
            "description": "Форма распространения рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>Banner</i> - Баннер</li><li><i>Text</i> - Текстовый блок</li><li><i>TextGraphic</i> - Текстово-графический блок</li><li><i>Video</i> - Видеоролик</li><li><i>Audio</i> - Аудиозапись</li><li><i>AudioBroadcast</i> - Аудиотрансляции в прямом эфире</li><li><i>VideoBroadcast</i> - Видеотрансляции в прямом эфире</li><li><i>Other</i> - Иное - не поддерживается начиная с ЕРИР v.5</li><li><i>TextVideoBlock</i> - Текстовый блок с видео</li><li><i>TextAudioBlock</i> - Текстовый блок с аудио</li><li><i>TextAudioVideoBlock</i> - Текстовый блок с аудио и видео</li><li><i>TextGraphicVideoBlock</i> - Текстово-графический блок с видео</li><li><i>TextGraphicAudioBlock</i> - Текстово-графический блок с аудио</li><li><i>TextGraphicAudioVideoBlock</i> - Текстово-графический блок с аудио и видео</li><li><i>BannerHtml5</i> - </li></ul>"
          },
          "advertiserUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Целевые ссылки (массив)\n\r\nПроверка URL:\r\n<ul><li>Проверить протокол http, https, ftp, sftp</li><li>Проверить хост: в нем не должно содержаться punycode или urlencode</li></ul><p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true,
            "example": [
              "http://test.ru"
            ]
          },
          "description": {
            "type": "string",
            "description": "Общее описание объекта рекламирования\r\n<ul><li>Минимальная длина: 1</li><li>Максимальная длина: 1000</li><li>Длина строки от 1 до 1000, может содержать цифры и буквы, а также все спец символы</li><li>В начале и в конце не должно быть пробела и переноса на другую строку</li></ul><p style=\"color: blue\">Поле обязательно для заполнения</p>",
            "example": "Описание креатива 4H67RLFG"
          },
          "targetAudienceParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetAudienceParam"
            },
            "description": "Параметры целевой аудитории рекламы\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "isNative": {
            "type": "boolean",
            "description": "Признак нативной рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "isSocial": {
            "type": "boolean",
            "description": "Признак социальной рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "mediaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeMediaDataItem"
            },
            "description": "Медиаданные креатива (массив)\n\r\nДолжен быть добавлен хотя бы один элемент при значениях поля form:\r\n<ul><li>TextGraphic</li><li>TextVideoBlock</li><li>TextAudioBlock</li><li>TextAudioVideoBlock</li><li>TextGraphicVideoBlock</li><li>TextGraphicAudioBlock</li><li>TextGraphicAudioVideoBlock</li><li>Banner</li><li>BannerHtml5</li><li>Video</li><li>Audio</li><li>AudioBroadcast</li><li>VideoBroadcast</li></ul><p style=\"color: blue\">Поле условно-обязательно для заполнения</p>",
            "nullable": true
          },
          "textData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTextDataItem"
            },
            "description": "Текстовые медиаданные креатива (массив)\n\r\nДолжен быть добавлен хотя бы один элемент при значениях поля form:\r\n<ul><li>Text</li><li>TextGraphic</li><li>TextVideoBlock</li><li>TextAudioBlock</li><li>TextAudioVideoBlock</li><li>TextGraphicVideoBlock</li><li>TextGraphicAudioBlock</li><li>TextGraphicAudioVideoBlock</li></ul><p style=\"color: blue\">Поле условно-обязательно для заполнения</p>",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Id креатива в ОРД"
          },
          "erid": {
            "type": "string",
            "description": "Маркер креатива для добавления в кликовые ссылки. Формируется в момент регистрации креатива в ЕРИР, в дальнейшем передаётся Агентствам"
          },
          "status": {
            "enum": [
              "Creating",
              "Created",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError",
              "DeletionRequired",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Статус креатива<p>Members:</p><ul><li><i>Creating</i> - Идет загрузка в ОРД (элемент фида создан, но медиа-данные еще не загружены)</li><li><i>Created</i> - Создан в БД (наша валидация пройдена). Пока не используется, сущность сразу переходит в статус [Ожидает регистрации].</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>Active</i> - Активный</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>Deleting</i> - Идет удаление, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>"
          },
          "erirValidationError": {
            "$ref": "#/components/schemas/ErirValidationError"
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос креатива"
      },
      "CreativeTextDataItem": {
        "type": "object",
        "properties": {
          "textData": {
            "type": "string",
            "description": "Текстовые данные креатива",
            "example": "Некий текст"
          }
        },
        "additionalProperties": false,
        "description": "Элемент текстовых медиаданных креатива"
      },
      "DeleteContractWebApiDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id удаляемого договора"
          },
          "finalContractId": {
            "type": "string",
            "description": "Id доходного договора, заполняется только при удалении изначального договора",
            "nullable": true
          },
          "kind": {
            "enum": [
              "FinalContract",
              "InitialContract",
              "OuterContract"
            ],
            "type": "string",
            "description": "Вид удаляемой связи (т.е. чем этот договор был - конечным, изначальным, внешним для агентства)<p>Members:</p><ul><li><i>FinalContract</i> - Конечный договор</li><li><i>InitialContract</i> - Изначальный договор</li><li><i>OuterContract</i> - Внешний договор</li></ul>"
          }
        },
        "additionalProperties": false,
        "description": "DTO для удаления договора через WebAPI"
      },
      "DeleteRestoreCreativeWebApiDto": {
        "type": "object",
        "properties": {
          "erid": {
            "type": "string",
            "description": "Фильтр по маркеру креатива",
            "nullable": true
          },
          "nativeCustomerId": {
            "type": "string",
            "description": "Пользовательский Id креатива",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Запрос на удаление/восстановление креатива.\r\nПередавать следует только одно двух из полей - либо NativeCustomerId, либо Erid"
      },
      "EditCreativeRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id креатива. Должно быть заполнено либо Id креатива, либо NativeCustomerId, либо Erid\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `NativeCustomerId`, `Erid`</p>",
            "nullable": true,
            "example": "CR5pxRa__aRkSgUqt0JeNkoA"
          },
          "nativeCustomerId": {
            "type": "string",
            "description": "Id креатива в системе клиента\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `Id`, `Erid`</p>",
            "nullable": true
          },
          "erid": {
            "type": "string",
            "description": "Erid креатива\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `Id`, `NativeCustomerId`</p>",
            "nullable": true,
            "example": "2SDnjcX1BkW"
          },
          "creativeGroupId": {
            "type": "string",
            "description": "Id брони, если пусто, значит - создаем новую бронь, иначе добавляем в существующую. При этом бронь остается текущая или все поля новой брони обязаны совпадать с текущей\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "creativeGroupName": {
            "type": "string",
            "description": "Наименование создаваемой брони, заполняется только если CreativeGroupId = NULL\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения</p>",
            "nullable": true,
            "example": "ТестоваяГруппа"
          },
          "creativeGroupStartDate": {
            "type": "string",
            "description": "Дата начала рекламной компании\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "format": "date",
            "nullable": true,
            "example": "2023-01-01"
          },
          "creativeGroupEndDate": {
            "type": "string",
            "description": "Дата окончания рекламной компании\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "format": "date",
            "nullable": true,
            "example": "2023-30-01"
          },
          "advertiserUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Целевые ссылки (сайты рекламодателя, на который осуществляется переход с креатива)\r\nПроверка URL:\r\n<ul><li>Проверить протокол http, https, ftp, sftp</li><li>Проверить хост: в нем не должно содержаться punycode или urlencode</li></ul><p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "example": [
              "http://test1.ru",
              "http://test2.ru"
            ]
          },
          "mediaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeMediaDataItem"
            },
            "description": "Медиаданные креатива (массив)\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "textData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTextDataItem"
            },
            "description": "Текстовые медиаданные креатива (массив)\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для редактирования креатива"
      },
      "EditFinalContractWebApiDto": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата заключения договора",
            "format": "date",
            "example": "2023-04-01"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по договору в руб.",
            "format": "double",
            "nullable": true,
            "example": 100
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "Включен ли НДС в Amount",
            "example": true
          },
          "isAgentActingForPublisher": {
            "type": "boolean",
            "description": "Направление денежных средств в сторону заказчика",
            "nullable": true,
            "example": true
          },
          "type": {
            "enum": [
              "ServiceAgreement",
              "MediationContract",
              "AdditionalAgreement",
              "SelfPromotionContract",
              "VirtualFinalContract",
              "EcidContract"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы договоров\"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>"
          },
          "subjectType": {
            "enum": [
              "Distribution",
              "OrgDistribution",
              "Representation",
              "Mediation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Сведения о предмете договора\"",
            "nullable": true
          },
          "actionType": {
            "enum": [
              "Contracting",
              "Distribution",
              "CommercialRepresentation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы взаимодействия сторон посреднического договора\"",
            "nullable": true
          },
          "parentMainContractId": {
            "type": "string",
            "description": "Id основного договора для доп.соглашения",
            "nullable": true,
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "clientId": {
            "type": "string",
            "description": "Id контрагента-заказчика по доходному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "partnerId": {
            "type": "string",
            "description": "Id партнера",
            "nullable": true,
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "id": {
            "type": "string",
            "description": "Id доходного договора",
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          }
        },
        "additionalProperties": false,
        "description": "DTO для редактирования доходного договора через WebAPI"
      },
      "EditInitialContractWebApiDto": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата заключения договора",
            "format": "date",
            "example": "2023-04-01"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по договору в руб.",
            "format": "double",
            "nullable": true,
            "example": 100
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "Включен ли НДС в Amount",
            "example": true
          },
          "isAgentActingForPublisher": {
            "type": "boolean",
            "description": "Направление денежных средств в сторону заказчика",
            "nullable": true,
            "example": true
          },
          "type": {
            "enum": [
              "ServiceAgreement",
              "MediationContract",
              "AdditionalAgreement",
              "SelfPromotionContract",
              "VirtualFinalContract",
              "EcidContract"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы договоров\"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>"
          },
          "subjectType": {
            "enum": [
              "Distribution",
              "OrgDistribution",
              "Representation",
              "Mediation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Сведения о предмете договора\"",
            "nullable": true
          },
          "actionType": {
            "enum": [
              "Contracting",
              "Distribution",
              "CommercialRepresentation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы взаимодействия сторон посреднического договора\"",
            "nullable": true
          },
          "parentMainContractId": {
            "type": "string",
            "description": "Id основного договора для доп.соглашения",
            "nullable": true,
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "contractorId": {
            "type": "string",
            "description": "Id контрагента-исполнителя по изначальному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "clientId": {
            "type": "string",
            "description": "Id контрагента-заказчика по изначальному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "finalContractId": {
            "type": "string",
            "description": "Id или Cid доходного договора",
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "id": {
            "type": "string",
            "description": "Id изначального договора",
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          }
        },
        "additionalProperties": false,
        "description": "DTO для редактирования изначального договора через WebAPI"
      },
      "EditInvoiceDataWebApiDto": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер акта. Допускается null, в таком случае считаем, что акт без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата акта",
            "format": "date",
            "example": "2022-12-31"
          },
          "contractorRole": {
            "enum": [
              "Rr",
              "Ors",
              "Rd",
              "Ra"
            ],
            "type": "string",
            "description": "Роль исполнителя в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>",
            "example": "Ra"
          },
          "clientRole": {
            "enum": [
              "Rr",
              "Ors",
              "Rd",
              "Ra"
            ],
            "type": "string",
            "description": "Роль заказчика в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>",
            "example": "Rd"
          },
          "amount": {
            "type": "number",
            "description": "Общая стоимость по акту в руб.",
            "format": "double",
            "example": 100
          },
          "startDate": {
            "type": "string",
            "description": "Дата начала оказания услуг по акту",
            "format": "date",
            "example": "2022-12-01"
          },
          "endDate": {
            "type": "string",
            "description": "Дата окончания оказания услуг по акту (включительно)",
            "format": "date",
            "example": "2022-12-31"
          },
          "finalContractId": {
            "type": "string",
            "description": "Id доходного договора в ОРД",
            "example": "CT3at_SU7y3ECdCb-AfHV3sA"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор акта",
            "example": "INUFNs1ibfg0erF1PNpTOAyg"
          }
        },
        "additionalProperties": false,
        "description": "DTO для редактирования основной информации акта через WebAPI"
      },
      "EditInvoiceStatisticsWebApiDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор акта"
          },
          "initialContractsData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceInitialContractItem"
            },
            "description": "Данные по изначальным договорам (массив)"
          },
          "statisticsByPlatforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceStatisticsByPlatformsItem"
            },
            "description": "Статистика по площадкам (массив)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для редактирования статистики акта через WebAPI"
      },
      "EditOuterContractWebApiDto": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата заключения договора",
            "format": "date",
            "example": "2023-04-01"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по договору в руб.",
            "format": "double",
            "nullable": true,
            "example": 100
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "Включен ли НДС в Amount",
            "example": true
          },
          "isAgentActingForPublisher": {
            "type": "boolean",
            "description": "Направление денежных средств в сторону заказчика",
            "nullable": true,
            "example": true
          },
          "type": {
            "enum": [
              "ServiceAgreement",
              "MediationContract",
              "AdditionalAgreement",
              "SelfPromotionContract",
              "VirtualFinalContract",
              "EcidContract"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы договоров\"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>"
          },
          "subjectType": {
            "enum": [
              "Distribution",
              "OrgDistribution",
              "Representation",
              "Mediation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Сведения о предмете договора\"",
            "nullable": true
          },
          "actionType": {
            "enum": [
              "Contracting",
              "Distribution",
              "CommercialRepresentation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы взаимодействия сторон посреднического договора\"",
            "nullable": true
          },
          "parentMainContractId": {
            "type": "string",
            "description": "Id основного договора для доп.соглашения",
            "nullable": true,
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "contractorId": {
            "type": "string",
            "description": "Id контрагента-исполнителя по изначальному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "partnerId": {
            "type": "string",
            "description": "Id партнера",
            "nullable": true,
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "isRegReport": {
            "type": "boolean",
            "description": "Признак того, что исполнитель по договору (Агентство, к которому относится договор) должен регистрировать креативы и предоставлять разаллокацию по ним в актах"
          },
          "id": {
            "type": "string",
            "description": "Id расходного договора",
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          }
        },
        "additionalProperties": false,
        "description": "DTO для редактирования расходного договора через WebAPI"
      },
      "EditPlatformWebApiDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование площадки",
            "example": "Тестовая площадка"
          },
          "type": {
            "enum": [
              "Site",
              "Application",
              "InformationSystem"
            ],
            "type": "string",
            "description": "Тип площадки<p>Members:</p><ul><li><i>Site</i> - Сайт</li><li><i>Application</i> - Приложение</li><li><i>InformationSystem</i> - Информационная система, не поддерживается начиная с ЕРИР v.5</li></ul>"
          },
          "url": {
            "type": "string",
            "description": "Url площадки",
            "nullable": true,
            "example": "https://example.com"
          },
          "isOwner": {
            "type": "boolean",
            "description": "Признак принадлежности агентству"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор площадки",
            "example": "PLCqwqXBhLMk6eTsIQoUT48A"
          }
        },
        "additionalProperties": false,
        "description": "DTO для редактирования площадки через WebAPI"
      },
      "EntityIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор акта",
            "example": "INUFNs1ibfg0erF1PNpTOAyg"
          }
        },
        "additionalProperties": false,
        "description": "Ответ с Id сущности"
      },
      "ErirValidationError": {
        "type": "object",
        "properties": {
          "stage": {
            "enum": [
              "EntityHeader",
              "First",
              "Second"
            ],
            "type": "string",
            "description": "Тип запроса ЕРИР-интеграции<p>Members:</p><ul><li><i>EntityHeader</i> - Отправлена заголовочная информация (например шапка акта)</li><li><i>First</i> - Первоначальный быстрый запрос, проверяются лишь атрибуты сущности</li><li><i>Second</i> - Запрос на получение уточненных результатов логической проверки</li></ul>"
          },
          "code": {
            "type": "string",
            "description": "Код ошибки от ЕРИР",
            "example": "I_82"
          },
          "message": {
            "type": "string",
            "description": "Подробный текст ошибки от ЕРИР",
            "example": "В разаллокации присутствует более одного договора"
          },
          "responseDt": {
            "type": "string",
            "description": "Дата-время ответа, полученного от ЕРИР",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Информация об ошибке регистрации в ЕРИР"
      },
      "FiasResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор адресного объекта"
          },
          "parentId": {
            "type": "string",
            "description": "Идентификатор родительского объекта",
            "nullable": true
          },
          "objectGuid": {
            "type": "string",
            "description": "Глобальный уникальный идентификатор адресного объекта типа UUID",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "name": {
            "type": "string",
            "description": "Краткое наименование типа объекта",
            "example": "город"
          },
          "fullName": {
            "type": "string",
            "description": "Полное наименование адресного объекта",
            "example": "Нижний Новгород"
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос адресного объекты"
      },
      "FinalContractResponse": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата заключения договора",
            "format": "date",
            "example": "2023-04-01"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по договору в руб.",
            "format": "double",
            "nullable": true,
            "example": 100
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "Включен ли НДС в Amount",
            "example": true
          },
          "isAgentActingForPublisher": {
            "type": "boolean",
            "description": "Направление денежных средств в сторону заказчика",
            "nullable": true,
            "example": true
          },
          "type": {
            "enum": [
              "ServiceAgreement",
              "MediationContract",
              "AdditionalAgreement",
              "SelfPromotionContract",
              "VirtualFinalContract",
              "EcidContract"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы договоров\"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>"
          },
          "subjectType": {
            "enum": [
              "Distribution",
              "OrgDistribution",
              "Representation",
              "Mediation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Сведения о предмете договора\"",
            "nullable": true
          },
          "actionType": {
            "enum": [
              "Contracting",
              "Distribution",
              "CommercialRepresentation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы взаимодействия сторон посреднического договора\"",
            "nullable": true
          },
          "parentMainContractId": {
            "type": "string",
            "description": "Id основного договора для доп.соглашения",
            "nullable": true,
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "clientId": {
            "type": "string",
            "description": "Id контрагента-заказчика по доходному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "partnerId": {
            "type": "string",
            "description": "Id партнера",
            "nullable": true,
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "id": {
            "type": "string",
            "description": "Id доходного договора в ОРД",
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "status": {
            "enum": [
              "Created",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError",
              "Testing",
              "DeletionRequired",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Статус доходного договора в ОРД<p>Members:</p><ul><li><i>Created</i> - Создан в БД (наша валидация пройдена). Пока не используется, сущность сразу переходит в статус [Ожидает регистрации].</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>Active</i> - Активный</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li><li><i>Testing</i> - Тестирование - для тестирования массовой загрузки креативов на продовом контуре</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>Deleting</i> - Идет удаление, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>"
          },
          "contractorId": {
            "type": "string",
            "description": "Id исполнителя",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "contractorInn": {
            "type": "string",
            "description": "ИНН исполнителя",
            "example": "7722643959"
          },
          "contractorName": {
            "type": "string",
            "description": "Наименование исполнителя",
            "example": "ООО \"Ромашка\""
          },
          "cid": {
            "type": "string",
            "description": "Cid доходного договора",
            "nullable": true,
            "example": "763acd99-687b-46cd-8f40-45eced77413c"
          },
          "erirValidationError": {
            "$ref": "#/components/schemas/ErirValidationError"
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос доходного договора"
      },
      "GetClientRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Фильтр по Id заказчика в ОРД",
            "nullable": true
          },
          "inn": {
            "type": "string",
            "description": "Фильтр по ИНН заказчика",
            "nullable": true
          },
          "status": {
            "enum": [
              "Created",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError",
              "Blocked"
            ],
            "type": "string",
            "description": "Фильтр по статусу заказчика",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения списка заказчиков через WebAPI (TASK #2788310)"
      },
      "GetCreativeGroupsRequest": {
        "type": "object",
        "properties": {
          "initialContractId": {
            "type": "string",
            "description": "Фильтр по Id или Cid изначального договора изначального договора\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "finalContractId": {
            "type": "string",
            "description": "Фильтр по Id доходного договора в ОРД\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "creativeGroupName": {
            "type": "string",
            "description": "Фильтр по номеру доходного договора\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "creativeGroupStartDate": {
            "type": "string",
            "description": "Дата начала рекламной компании\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "format": "date",
            "nullable": true
          },
          "creativeGroupEndDate": {
            "type": "string",
            "description": "Дата окончания рекламной компании\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения списка групп креативов через WebAPI"
      },
      "GetCreativesWebApiDto": {
        "type": "object",
        "properties": {
          "nativeCustomerId": {
            "type": "string",
            "description": "Пользовательский Id креатива",
            "nullable": true
          },
          "creativeId": {
            "type": "string",
            "description": "Фильтр по Id креатива в ОРД",
            "nullable": true
          },
          "erid": {
            "type": "string",
            "description": "Фильтр по маркеру креатива",
            "nullable": true
          },
          "creativeGroupStartDate": {
            "type": "string",
            "description": "Дата начала рекламной компании",
            "format": "date",
            "nullable": true
          },
          "creativeGroupEndDate": {
            "type": "string",
            "description": "Дата окончания рекламной компании",
            "format": "date",
            "nullable": true
          },
          "initialContractId": {
            "type": "string",
            "description": "Фильтр по Id или Cid изначального договора",
            "nullable": true
          },
          "initialContractNumber": {
            "type": "string",
            "description": "Фильтр по номеру изначального договора",
            "nullable": true
          },
          "finalContractId": {
            "type": "string",
            "description": "Фильтр по Id доходного договора в ОРД",
            "nullable": true
          },
          "finalContractNumber": {
            "type": "string",
            "description": "Фильтр по номеру доходного договора",
            "nullable": true
          },
          "status": {
            "enum": [
              "Creating",
              "Created",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError",
              "DeletionRequired",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Фильтр по статусу креатива",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения списка креативов через WebAPI (TASK #2775609)"
      },
      "GetFinalContractsRequest": {
        "type": "object",
        "properties": {
          "finalContractId": {
            "type": "string",
            "description": "Фильтр по Id или Cid доходного договора",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "description": "Фильтр по Id контрагента-заказчика по договору в ОРД",
            "nullable": true
          },
          "status": {
            "enum": [
              "Created",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError",
              "Testing",
              "DeletionRequired",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Фильтр по статусу доходного договора",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения списка доходных договоров через WebAPI (TASK #2788308)"
      },
      "GetInitialContractRequest": {
        "type": "object",
        "properties": {
          "initialContractId": {
            "type": "string",
            "description": "Фильтр по Id или Cid изначального договора",
            "nullable": true
          },
          "finalContractId": {
            "type": "string",
            "description": "Фильтр по Id или Cid доходного договора",
            "nullable": true
          },
          "contractorId": {
            "type": "string",
            "description": "Фильтр по Id контрагента-исполнителя по изначальному договору в ОРД",
            "nullable": true
          },
          "contractorInn": {
            "type": "string",
            "description": "Фильтр по ИНН контрагента-исполнителя по изначальному договору в ОРД",
            "nullable": true
          },
          "contractorName": {
            "type": "string",
            "description": "Фильтр по наименованию контрагента-исполнителя по изначальному договору в ОРД",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "description": "Фильтр по Id контрагента-заказчика по изначальному договору в ОРД",
            "nullable": true
          },
          "clientInn": {
            "type": "string",
            "description": "Фильтр по ИНН контрагента-заказчика по изначальному договору в ОРД",
            "nullable": true
          },
          "clientName": {
            "type": "string",
            "description": "Фильтр по наименованию контрагента-заказчика по изначальному договору в ОРД",
            "nullable": true
          },
          "status": {
            "enum": [
              "Created",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError",
              "Testing",
              "DeletionRequired",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Фильтр по статусу изначального договора",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения списка изначальных договоров через WebAPI (TASK #2775607)"
      },
      "GetInvoicelessPeriodsRequest": {
        "type": "object",
        "properties": {
          "dateStart": {
            "type": "string",
            "description": "Начало диапазона дат периодов статистики",
            "format": "date",
            "nullable": true
          },
          "dateEnd": {
            "type": "string",
            "description": "Конец диапазона дат периодов статистики",
            "format": "date",
            "nullable": true
          },
          "status": {
            "enum": [
              "Creating",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError"
            ],
            "type": "string",
            "description": "Фильтр по статусу акта",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для запроса на получение списка периодов статистики, оторванной от акта, через WebAPI"
      },
      "GetInvoicesWebApiDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "description": "Фильтр по Id акта в ОРД",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Номер акта",
            "nullable": true
          },
          "dateStart": {
            "type": "string",
            "description": "Начало диапазона дат актов",
            "format": "date",
            "nullable": true
          },
          "dateEnd": {
            "type": "string",
            "description": "Конец диапазона дат актов",
            "format": "date",
            "nullable": true
          },
          "finalContractId": {
            "type": "string",
            "description": "Фильтр по Id доходного договора в ОРД",
            "nullable": true
          },
          "status": {
            "enum": [
              "Creating",
              "Created",
              "RegistrationRequired",
              "Transferring",
              "Registering",
              "Active",
              "RegistrationError",
              "DeletionRequired",
              "DeletionTransferring",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Фильтр по статусу акта",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для запроса на получение списка актов через WebAPI (TASK #2775610)"
      },
      "GetOuterContractsRequest": {
        "type": "object",
        "properties": {
          "outerContractId": {
            "type": "string",
            "description": "Фильтр по Id или Cid расходного договора",
            "nullable": true
          },
          "status": {
            "enum": [
              "Created",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError",
              "Testing",
              "DeletionRequired",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Фильтр по статусу расходного договора",
            "nullable": true
          },
          "contractorId": {
            "type": "string",
            "description": "Фильтр по Id контрагента-исполнителя по расходному договору в ОРД",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "description": "Фильтр по Id контрагента-заказчика по расходному договору в ОРД",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения списка расходных договоров через WebAPI (TASK #2843048)"
      },
      "InitialContractResponse": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата заключения договора",
            "format": "date",
            "example": "2023-04-01"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по договору в руб.",
            "format": "double",
            "nullable": true,
            "example": 100
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "Включен ли НДС в Amount",
            "example": true
          },
          "isAgentActingForPublisher": {
            "type": "boolean",
            "description": "Направление денежных средств в сторону заказчика",
            "nullable": true,
            "example": true
          },
          "type": {
            "enum": [
              "ServiceAgreement",
              "MediationContract",
              "AdditionalAgreement",
              "SelfPromotionContract",
              "VirtualFinalContract",
              "EcidContract"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы договоров\"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>"
          },
          "subjectType": {
            "enum": [
              "Distribution",
              "OrgDistribution",
              "Representation",
              "Mediation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Сведения о предмете договора\"",
            "nullable": true
          },
          "actionType": {
            "enum": [
              "Contracting",
              "Distribution",
              "CommercialRepresentation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы взаимодействия сторон посреднического договора\"",
            "nullable": true
          },
          "parentMainContractId": {
            "type": "string",
            "description": "Id основного договора для доп.соглашения",
            "nullable": true,
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "contractorId": {
            "type": "string",
            "description": "Id контрагента-исполнителя по изначальному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "clientId": {
            "type": "string",
            "description": "Id контрагента-заказчика по изначальному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "finalContractId": {
            "type": "string",
            "description": "Id или Cid доходного договора",
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "id": {
            "type": "string",
            "description": "Id изначального договора в ОРД",
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "status": {
            "enum": [
              "Created",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError",
              "Testing",
              "DeletionRequired",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Статус изначального договора в ОРД<p>Members:</p><ul><li><i>Created</i> - Создан в БД (наша валидация пройдена). Пока не используется, сущность сразу переходит в статус [Ожидает регистрации].</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>Active</i> - Активный</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li><li><i>Testing</i> - Тестирование - для тестирования массовой загрузки креативов на продовом контуре</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>Deleting</i> - Идет удаление, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>"
          },
          "contractorInn": {
            "type": "string",
            "description": "ИНН исполнителя",
            "example": "7722643959"
          },
          "contractorName": {
            "type": "string",
            "description": "Наименование исполнителя",
            "example": "ООО «Ромашка»"
          },
          "clientInn": {
            "type": "string",
            "description": "ИНН заказчика",
            "example": "7722643959"
          },
          "clientName": {
            "type": "string",
            "description": "Наименование заказчика",
            "example": "ООО «Ромашка»"
          },
          "cid": {
            "type": "string",
            "description": "Cid изначального договора",
            "nullable": true,
            "example": "763acd99-687b-46cd-8f40-45eced77413c"
          },
          "erirValidationError": {
            "$ref": "#/components/schemas/ErirValidationError"
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос изначального договора"
      },
      "InvoiceInitialContractItem": {
        "type": "object",
        "properties": {
          "initialContractId": {
            "type": "string",
            "description": "Id или Cid изначального договора",
            "example": "CT7ae_PK9R0hCdAb-NfHH2fN"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по изначальному договору в составе акта в руб.",
            "format": "double",
            "example": 1500
          }
        },
        "additionalProperties": false,
        "description": "Данные по изначальному договору для акта"
      },
      "InvoiceResponse": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер акта. Допускается null, в таком случае считаем, что акт без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата акта",
            "format": "date",
            "example": "2022-12-31"
          },
          "contractorRole": {
            "enum": [
              "Rr",
              "Ors",
              "Rd",
              "Ra"
            ],
            "type": "string",
            "description": "Роль исполнителя в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>",
            "example": "Ra"
          },
          "clientRole": {
            "enum": [
              "Rr",
              "Ors",
              "Rd",
              "Ra"
            ],
            "type": "string",
            "description": "Роль заказчика в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>",
            "example": "Rd"
          },
          "amount": {
            "type": "number",
            "description": "Общая стоимость по акту в руб.",
            "format": "double",
            "example": 100
          },
          "startDate": {
            "type": "string",
            "description": "Дата начала оказания услуг по акту",
            "format": "date",
            "example": "2022-12-01"
          },
          "endDate": {
            "type": "string",
            "description": "Дата окончания оказания услуг по акту (включительно)",
            "format": "date",
            "example": "2022-12-31"
          },
          "finalContractId": {
            "type": "string",
            "description": "Id доходного договора в ОРД",
            "example": "CT3at_SU7y3ECdCb-AfHV3sA"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор акта",
            "example": "INUFNs1ibfg0erF1PNpTOAyg"
          },
          "status": {
            "enum": [
              "Creating",
              "Created",
              "RegistrationRequired",
              "Transferring",
              "Registering",
              "Active",
              "RegistrationError",
              "DeletionRequired",
              "DeletionTransferring",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Статус акта в ОРД<p>Members:</p><ul><li><i>Creating</i> - Идет загрузка в ОРД (технический статус)</li><li><i>Created</i> - Черновик (загрузка в ОРД завершена), нужно послать в ЕРИР</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Transferring</i> - Идет передача в ЕРИР, после чего перадача шапки акта, разаллокации и статистики</li><li><i>Registering</i> - Идет регистрация, удаленные креативы и статистика переданы, также передана остальная информация по акту, быстрый контроль ЕРИР пройден, через сутки ждем уточненного ответа</li><li><i>Active</i> - Активный, зарегистрирован в ЕРИР</li><li><i>RegistrationError</i> - Ошибка регистрации в ЕРИР (любого этапа)</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>DeletionTransferring</i> - Идет передача в ЕРИР удаленных креативов и строк, после чего перадача шапки акта, разаллокации и статистики</li><li><i>Deleting</i> - Идет передача креативов и статистики для удаления, либо быстрый контроль всего ЕРИР пройден, через сутки ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>"
          },
          "erirValidationError": {
            "$ref": "#/components/schemas/ErirValidationError"
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос акта"
      },
      "InvoiceStatisticsByPlatformsItem": {
        "type": "object",
        "properties": {
          "erid": {
            "type": "string",
            "description": "Маркер креатива",
            "example": "Pb3MmBtzsrbL19RgOqsipS1ANueaCUzJSdpiY5g"
          },
          "platformUrl": {
            "type": "string",
            "description": "URL площадки",
            "nullable": true,
            "example": "https://example.ru"
          },
          "platformName": {
            "type": "string",
            "description": "Наименование площадки",
            "nullable": true,
            "example": "test"
          },
          "platformType": {
            "enum": [
              "Site",
              "Application",
              "InformationSystem"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы площадок\"",
            "nullable": true,
            "example": "Site"
          },
          "platformOwnedByAgency": {
            "type": "boolean",
            "description": "Принадлежит ли площадка агентству",
            "nullable": true,
            "example": false
          },
          "impsPlan": {
            "type": "integer",
            "description": "Количество показов по акту",
            "format": "int32",
            "example": 100
          },
          "impsFact": {
            "type": "integer",
            "description": "Количество показов фактическое",
            "format": "int32",
            "example": 100
          },
          "startDatePlan": {
            "type": "string",
            "description": "Дата начала показов по акту",
            "format": "date",
            "example": "2022-12-01"
          },
          "startDateFact": {
            "type": "string",
            "description": "Дата начала показов фактическая",
            "format": "date",
            "example": "2022-12-01"
          },
          "endDatePlan": {
            "type": "string",
            "description": "Дата окончания показов по акту",
            "format": "date",
            "example": "2022-12-31"
          },
          "endDateFact": {
            "type": "string",
            "description": "Дата окончания показов фактическая",
            "format": "date",
            "example": "2022-12-31"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по показу креатива на данной площадке в руб.",
            "format": "double",
            "example": 100
          },
          "price": {
            "type": "number",
            "description": "Стоимость единицы оказания услуг на данной площадке в руб.",
            "format": "double",
            "example": 10
          },
          "initialContractId": {
            "type": "string",
            "description": "Id или Cid изначального договора",
            "example": "CT7ae_PK9R0hCdAb-NfHH2fN"
          }
        },
        "additionalProperties": false,
        "description": "Данные по статистике по площадкам по креативу для акта"
      },
      "InvoiceSummaryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id акта в ОРД",
            "example": "INUFNs1ibfg0erF1PNpTOAyg"
          },
          "status": {
            "enum": [
              "Creating",
              "Created",
              "RegistrationRequired",
              "Transferring",
              "Registering",
              "Active",
              "RegistrationError",
              "DeletionRequired",
              "DeletionTransferring",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Статус акта в ОРД<p>Members:</p><ul><li><i>Creating</i> - Идет загрузка в ОРД (технический статус)</li><li><i>Created</i> - Черновик (загрузка в ОРД завершена), нужно послать в ЕРИР</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Transferring</i> - Идет передача в ЕРИР, после чего перадача шапки акта, разаллокации и статистики</li><li><i>Registering</i> - Идет регистрация, удаленные креативы и статистика переданы, также передана остальная информация по акту, быстрый контроль ЕРИР пройден, через сутки ждем уточненного ответа</li><li><i>Active</i> - Активный, зарегистрирован в ЕРИР</li><li><i>RegistrationError</i> - Ошибка регистрации в ЕРИР (любого этапа)</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>DeletionTransferring</i> - Идет передача в ЕРИР удаленных креативов и строк, после чего перадача шапки акта, разаллокации и статистики</li><li><i>Deleting</i> - Идет передача креативов и статистики для удаления, либо быстрый контроль всего ЕРИР пройден, через сутки ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>"
          },
          "amount": {
            "type": "number",
            "description": "Общая стоимость по акту в руб.",
            "format": "double",
            "example": 100
          },
          "initialContractsCount": {
            "type": "integer",
            "description": "Кол-во изначальных договоров в акте",
            "format": "int32",
            "example": 12
          },
          "initialContractsAmount": {
            "type": "number",
            "description": "Сумма стоимостей услуг по всем изначальным договорам в составе акта в руб.",
            "format": "double",
            "example": 1000
          },
          "creativesCount": {
            "type": "integer",
            "description": "Кол-во креативов в акте",
            "format": "int32",
            "example": 50
          },
          "platformsCount": {
            "type": "integer",
            "description": "Кол-во уникальных площадок в акте",
            "format": "int32",
            "example": 500
          },
          "impsFactCount": {
            "type": "integer",
            "description": "Общее число фактических показов",
            "format": "int64",
            "example": 1500
          },
          "impsPlanCount": {
            "type": "integer",
            "description": "Общее число показов по акту",
            "format": "int64",
            "example": 1400
          },
          "impsAmount": {
            "type": "number",
            "description": "Общая стоимость показов по акту",
            "format": "double",
            "example": 2000
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос сводки по акту"
      },
      "InvoicelessStatisticsByPlatforms": {
        "type": "object",
        "properties": {
          "erid": {
            "type": "string",
            "description": "Маркер креатива",
            "example": "Pb3MmBtzsrbL19RgOqsipS1ANueaCUzJSdpiY5g"
          },
          "platformUrl": {
            "type": "string",
            "description": "URL площадки",
            "nullable": true,
            "example": "https://example.ru"
          },
          "platformName": {
            "type": "string",
            "description": "Наименование площадки",
            "nullable": true,
            "example": "test"
          },
          "platformType": {
            "enum": [
              "Site",
              "Application",
              "InformationSystem"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы площадок\"",
            "nullable": true,
            "example": "Site"
          },
          "platformOwnedByAgency": {
            "type": "boolean",
            "description": "Принадлежит ли площадка агентству",
            "nullable": true,
            "example": false
          },
          "impsPlan": {
            "type": "integer",
            "description": "Количество показов по акту",
            "format": "int32",
            "example": 100
          },
          "impsFact": {
            "type": "integer",
            "description": "Количество показов фактическое",
            "format": "int32",
            "example": 100
          },
          "startDatePlan": {
            "type": "string",
            "description": "Дата начала показов по акту",
            "format": "date",
            "example": "2022-12-01"
          },
          "startDateFact": {
            "type": "string",
            "description": "Дата начала показов фактическая",
            "format": "date",
            "example": "2022-12-01"
          },
          "endDatePlan": {
            "type": "string",
            "description": "Дата окончания показов по акту",
            "format": "date",
            "example": "2022-12-31"
          },
          "endDateFact": {
            "type": "string",
            "description": "Дата окончания показов фактическая",
            "format": "date",
            "example": "2022-12-31"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по показу креатива на данной площадке в руб.",
            "format": "double",
            "example": 100
          },
          "price": {
            "type": "number",
            "description": "Стоимость единицы оказания услуг на данной площадке в руб.",
            "format": "double",
            "example": 10
          }
        },
        "additionalProperties": false,
        "description": "Данные по статистике по площадкам по креативу в отрыве от акта"
      },
      "InvoicelessStatisticsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id акта в ОРД"
          },
          "status": {
            "enum": [
              "Creating",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError"
            ],
            "type": "string",
            "description": "Статус периода в ОРД<p>Members:</p><ul><li><i>Creating</i> - Идет загрузка в ОРД (технический статус)</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа, включая ответ по креативам и статистике</li><li><i>Active</i> - Активный, зарегистрирован в ЕРИР</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li></ul>"
          },
          "erirValidationError": {
            "$ref": "#/components/schemas/ErirValidationError"
          },
          "year": {
            "type": "integer",
            "description": "Год периода",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "description": "Месяц периода",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "description": "Общая стоимость по акту в руб.",
            "format": "double"
          },
          "creativesCount": {
            "type": "integer",
            "description": "Кол-во креативов в акте",
            "format": "int64"
          },
          "platformsCount": {
            "type": "integer",
            "description": "Кол-во уникальных площадок в акте",
            "format": "int64"
          },
          "impsFactCount": {
            "type": "integer",
            "description": "Общее число фактических показов",
            "format": "int64"
          },
          "impsPlanCount": {
            "type": "integer",
            "description": "Общее число показов по акту",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос статистики без акта"
      },
      "OuterContractResponse": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера",
            "nullable": true,
            "example": "Тест"
          },
          "date": {
            "type": "string",
            "description": "Дата заключения договора",
            "format": "date",
            "example": "2023-04-01"
          },
          "amount": {
            "type": "number",
            "description": "Стоимость услуг по договору в руб.",
            "format": "double",
            "nullable": true,
            "example": 100
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "Включен ли НДС в Amount",
            "example": true
          },
          "isAgentActingForPublisher": {
            "type": "boolean",
            "description": "Направление денежных средств в сторону заказчика",
            "nullable": true,
            "example": true
          },
          "type": {
            "enum": [
              "ServiceAgreement",
              "MediationContract",
              "AdditionalAgreement",
              "SelfPromotionContract",
              "VirtualFinalContract",
              "EcidContract"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы договоров\"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>"
          },
          "subjectType": {
            "enum": [
              "Distribution",
              "OrgDistribution",
              "Representation",
              "Mediation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Сведения о предмете договора\"",
            "nullable": true
          },
          "actionType": {
            "enum": [
              "Contracting",
              "Distribution",
              "CommercialRepresentation",
              "Other"
            ],
            "type": "string",
            "description": "Значение из справочника \"Типы взаимодействия сторон посреднического договора\"",
            "nullable": true
          },
          "parentMainContractId": {
            "type": "string",
            "description": "Id основного договора для доп.соглашения",
            "nullable": true,
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "contractorId": {
            "type": "string",
            "description": "Id контрагента-исполнителя по изначальному договору",
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "partnerId": {
            "type": "string",
            "description": "Id партнера",
            "nullable": true,
            "example": "CLhOO5UT6sIk-fIRu-QEsEuQ"
          },
          "isRegReport": {
            "type": "boolean",
            "description": "Признак того, что исполнитель по договору (Агентство, к которому относится договор) должен регистрировать креативы и предоставлять разаллокацию по ним в актах"
          },
          "id": {
            "type": "string",
            "description": "Id договора в ОРД",
            "example": "CT0N4ufC76TEu1xBEIwJ3CaA"
          },
          "status": {
            "enum": [
              "Created",
              "RegistrationRequired",
              "Registering",
              "Active",
              "RegistrationError",
              "Testing",
              "DeletionRequired",
              "Deleting",
              "DeletionError",
              "Deleted"
            ],
            "type": "string",
            "description": "Статус договора в ОРД<p>Members:</p><ul><li><i>Created</i> - Создан в БД (наша валидация пройдена). Пока не используется, сущность сразу переходит в статус [Ожидает регистрации].</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>Active</i> - Активный</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li><li><i>Testing</i> - Тестирование - для тестирования массовой загрузки креативов на продовом контуре</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>Deleting</i> - Идет удаление, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>"
          },
          "cid": {
            "type": "string",
            "description": "Cid расходного договора",
            "nullable": true,
            "example": "763acd99-687b-46cd-8f40-45eced77413c"
          },
          "erirValidationError": {
            "$ref": "#/components/schemas/ErirValidationError"
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос расходного договора"
      },
      "PartialClearInvoiceStatisticsItem": {
        "type": "object",
        "properties": {
          "erid": {
            "type": "string",
            "description": "Маркер креатива",
            "example": "2SDnjegvUsB"
          },
          "platformUrl": {
            "type": "string",
            "description": "URL площадки",
            "example": "https://example.com"
          },
          "startDatePlan": {
            "type": "string",
            "description": "Дата начала показов по акту",
            "format": "date",
            "example": "2024-05-22"
          },
          "startDateFact": {
            "type": "string",
            "description": "Дата начала показов фактическая",
            "format": "date",
            "example": "2024-05-22"
          },
          "endDatePlan": {
            "type": "string",
            "description": "Дата окончания показов по акту",
            "format": "date",
            "example": "2024-05-22"
          },
          "endDateFact": {
            "type": "string",
            "description": "Дата окончания показов фактическая",
            "format": "date",
            "example": "2024-05-22"
          },
          "initialContractId": {
            "type": "string",
            "description": "Id или Cid изначального договора",
            "example": "CTRl8rP7sBCU6KfyeCWdYBcw"
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для удаления строки статистики акта"
      },
      "PartialClearInvoiceWebApiDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор акта"
          },
          "initialContracts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список Id или Cid изначальных договоров из разаллокации для удаления",
            "nullable": true
          },
          "statisticsByPlatforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialClearInvoiceStatisticsItem"
            },
            "description": "Список строк статистики для удаления",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Запрос на частичную очистку акта"
      },
      "PlatformResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование площадки",
            "example": "Тестовая площадка"
          },
          "type": {
            "enum": [
              "Site",
              "Application",
              "InformationSystem"
            ],
            "type": "string",
            "description": "Тип площадки<p>Members:</p><ul><li><i>Site</i> - Сайт</li><li><i>Application</i> - Приложение</li><li><i>InformationSystem</i> - Информационная система, не поддерживается начиная с ЕРИР v.5</li></ul>"
          },
          "url": {
            "type": "string",
            "description": "Url площадки",
            "nullable": true,
            "example": "https://example.com"
          },
          "isOwner": {
            "type": "boolean",
            "description": "Признак принадлежности агентству"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор площадки",
            "example": "PLCqwqXBhLMk6eTsIQoUT48A"
          }
        },
        "additionalProperties": false,
        "description": "Ответ на запрос рекламной площадки"
      },
      "SimpleEditCreativeRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id креатива\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `NativeCustomerId`, `Erid`</p>",
            "nullable": true,
            "example": "CR5pxRa__aRkSgUqt0JeNkoA"
          },
          "nativeCustomerId": {
            "type": "string",
            "description": "Id креатива в системе клиента\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `Id`, `Erid`</p>",
            "nullable": true
          },
          "erid": {
            "type": "string",
            "description": "Erid креатива\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `Id`, `NativeCustomerId`</p>",
            "nullable": true,
            "example": "2SDnjcX1BkW"
          },
          "startDate": {
            "type": "string",
            "description": "Дата начала рекламной компании\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Дата окончания рекламной компании\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>",
            "format": "date",
            "nullable": true
          },
          "finalContractId": {
            "type": "string",
            "description": "Id доходного договора в ОРД\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>",
            "nullable": true,
            "example": "CTRl8rP7sBCU6KfyeCWdYBcw"
          },
          "initialContractId": {
            "type": "string",
            "description": "Id или Cid изначального договора. Если креатив создается на доходный договор, то нужно указать InitialContractId = FinalContractId.\r\n<p style=\"color: blue\">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>",
            "nullable": true,
            "example": "CTRl8rP7sBCU6KfyeCWdYBcw"
          },
          "isSelfPromotion": {
            "type": "boolean",
            "description": "Креативы относятся к саморекламе\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "type": {
            "enum": [
              "CPM",
              "CPC",
              "CPA",
              "Other"
            ],
            "type": "string",
            "description": "Тип рекламной кампании\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>CPM</i> - Cost Per Millennium, оплата за тысячу показов</li><li><i>CPC</i> - Cost Per Click, оплата за клик баннера</li><li><i>CPA</i> - Cost Per Action, оплата за совершенное целевое действие</li><li><i>Other</i> - Иное</li></ul>"
          },
          "form": {
            "enum": [
              "Banner",
              "Text",
              "TextGraphic",
              "Video",
              "Audio",
              "AudioBroadcast",
              "VideoBroadcast",
              "Other",
              "TextVideoBlock",
              "TextAudioBlock",
              "TextAudioVideoBlock",
              "TextGraphicVideoBlock",
              "TextGraphicAudioBlock",
              "TextGraphicAudioVideoBlock",
              "BannerHtml5"
            ],
            "type": "string",
            "description": "Форма распространения рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>Banner</i> - Баннер</li><li><i>Text</i> - Текстовый блок</li><li><i>TextGraphic</i> - Текстово-графический блок</li><li><i>Video</i> - Видеоролик</li><li><i>Audio</i> - Аудиозапись</li><li><i>AudioBroadcast</i> - Аудиотрансляции в прямом эфире</li><li><i>VideoBroadcast</i> - Видеотрансляции в прямом эфире</li><li><i>Other</i> - Иное - не поддерживается начиная с ЕРИР v.5</li><li><i>TextVideoBlock</i> - Текстовый блок с видео</li><li><i>TextAudioBlock</i> - Текстовый блок с аудио</li><li><i>TextAudioVideoBlock</i> - Текстовый блок с аудио и видео</li><li><i>TextGraphicVideoBlock</i> - Текстово-графический блок с видео</li><li><i>TextGraphicAudioBlock</i> - Текстово-графический блок с аудио</li><li><i>TextGraphicAudioVideoBlock</i> - Текстово-графический блок с аудио и видео</li><li><i>BannerHtml5</i> - </li></ul>"
          },
          "advertiserUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Целевые ссылки (массив)\r\nПроверка URL:\r\n<ul><li>Проверить протокол http, https, ftp, sftp</li><li>Проверить хост: в нем не должно содержаться punycode или urlencode</li></ul><p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true,
            "example": [
              "http://test1.ru",
              "http://test2.ru"
            ]
          },
          "description": {
            "type": "string",
            "description": "Общее описание объекта рекламирования\r\n<ul><li>Минимальная длина: 1</li><li>Максимальная длина: 1000</li><li>Длина строки от 1 до 1000, может содержать цифры и буквы, а также все спец символы</li><li>В начале и в конце не должно быть пробела и переноса на другую строку</li></ul><p style=\"color: blue\">Поле обязательно для заполнения</p>",
            "example": "Описание"
          },
          "targetAudienceParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetAudienceParam"
            },
            "description": "Параметры целевой аудитории\r\n<p style=\"color: lightblue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "isNative": {
            "type": "boolean",
            "description": "Признак нативной рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "isSocial": {
            "type": "boolean",
            "description": "Признак социальной рекламы\r\n<p style=\"color: blue\">Поле обязательно для заполнения</p>"
          },
          "mediaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeMediaDataItem"
            },
            "description": "Медиаданные креатива (массив)\r\n<p style=\"color: blue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          },
          "textData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTextDataItem"
            },
            "description": "Текстовые медиаданные креатива (массив)\r\n<p style=\"color: blue\">Поле не обязательно для заполнения</p>",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Параметры запроса для единого метода редактирования как креатива, так и группы"
      },
      "SupplementInvoiceWebApiDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "description": "Id акта в ОРД"
          },
          "initialContractsData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceInitialContractItem"
            },
            "description": "Данные по изначальным договорам для добавления к акту (массив)",
            "nullable": true
          },
          "statisticsByPlatforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceStatisticsByPlatformsItem"
            },
            "description": "Статистика по площадкам для добавления к акту (массив)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для дополнения акта через WebAPI (TASK #2775610)"
      },
      "TargetAudienceParam": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Geo",
              "Sex",
              "Age"
            ],
            "type": "string",
            "description": "Тип параметра: регион, пол, возраст<p>Members:</p><ul><li><i>Geo</i> - Код региона</li><li><i>Sex</i> - Пол</li><li><i>Age</i> - Возраст</li></ul>"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Коллекция значений\n<ul><li>Для типа \"geo\":\r\n<ul><li>Максимальная длина: 2</li><li>Длина строки 2, может содержать цифры 0-9</li><li>В элементах массива передаются коды регионов. Если массив пустой, то геотаргетинг направлен на всю Россию</li></ul></li><li>Для типа \"sex\":\n<ul><li>male - мужчины</li><li>female - женщины</li></ul>\r\nЕсли таргетинг на аудиторию не зависящую от пола, то параметр не передается.\r\n</li><li>Для типа \"age\":\n<ul><li>\"<минимальный возраст>:<максимальный возраст>\".</li><li>Например, \"25:45\" - означает, что реклама таргетируется на аудиторию от 25 до 45 лет.</li></ul>\r\nЕсли таргетинг на любой возраст, то параметр не передается\r\n</li></ul>"
          }
        },
        "additionalProperties": false,
        "description": "Параметр целевой аудитории"
      },
      "ValidationFailure": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "attemptedValue": {
            "nullable": true
          },
          "customState": {
            "nullable": true
          },
          "severity": {
            "enum": [
              "Error",
              "Warning",
              "Info"
            ],
            "type": "string"
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "formattedMessagePlaceholderValues": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ],
  "x-tagGroups": [
    {
      "name": "Акты",
      "tags": [
        "Создание акта",
        "Удаление данных акта",
        "Изменение акта",
        "Получение данных акта"
      ]
    },
    {
      "name": "Договоры",
      "tags": [
        "Создание договоров",
        "Удаление договоров",
        "Редактирование договоров",
        "Получение информации о договорах"
      ]
    },
    {
      "name": "Креативы",
      "tags": [
        "Создание креативов",
        "Удаление креативов",
        "Редактирование креативов",
        "Получение информации о креативах"
      ]
    },
    {
      "name": "Элементы фидов",
      "tags": [
        "Получение информации об элементах фидов",
        "Создание элементов фидов",
        "Редактирование элементов фидов"
      ]
    },
    {
      "name": "Контейнеры",
      "tags": [
        "Получение информации о контейнерах",
        "Создание контейнеров",
        "Редактирование контейнеров"
      ]
    },
    {
      "name": "Клиенты",
      "tags": [
        "Создание заказчиков",
        "Получение информации о заказчиках"
      ]
    },
    {
      "name": "Рекламные площадки",
      "tags": [
        "Создание рекламных площадок",
        "Редактирование рекламных площадок"
      ]
    },
    {
      "name": "Статистика",
      "tags": [
        "Создание статистики без акта",
        "Получение статистики без акта",
        "Удаление статистики без акта"
      ]
    },
    {
      "name": "Справочники",
      "tags": [
        "Данные из справочника регионов РФ"
      ]
    }
  ]
}
